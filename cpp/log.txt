insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
end of merge return
 0.020000s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (100.0%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (200.0%)
end of merge return
 0.020000s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (100.0%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
end of merge return
 0.030000s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (66.7%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
is_sorted_in_reverse return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
insertion sort return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
end of merge return
 0.000000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (n/a%)
end of merge return
 0.010000s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (100.0%)
end of merge return
 0.010000s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (200.0%)
exit success
